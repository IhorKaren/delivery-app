{"version":3,"file":"static/js/753.de518fba.chunk.js","mappings":"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","sources":["components/Map/Map.jsx","services/sendOrder.js","Pages/ShoppingCart/Shopping.card.styled.jsx","components/OrderForm/OrderForm.styled.jsx","components/OrderForm/OrderForm.jsx","components/CartList/CartList.jsx","components/Cart/Cart.styled.jsx","components/Cart/Cart.jsx","components/TotalPrice/TotalPrice.jsx","Pages/ShoppingCart/ShoppingCart.jsx"],"sourcesContent":["import { GoogleMap, Marker } from '@react-google-maps/api';\nimport { useState } from 'react';\n\nconst Map = ({ onClick }) => {\n  const [markerPosition, setMarkerPosition] = useState(null);\n\n  const mapContainerStyle = {\n    width: '500px',\n    height: '400px',\n    marginTop: '35px',\n    marginRight: '30px',\n  };\n\n  const center = {\n    lat: 50.4501,\n    lng: 30.5234,\n  };\n\n  const handleMapClick = event => {\n    const { lat, lng } = event.latLng;\n\n    const latitude = lat();\n    const longitude = lng();\n\n    setMarkerPosition({ lat: latitude, lng: longitude });\n    onClick(event);\n  };\n\n  return (\n    <GoogleMap\n      zoom={13}\n      center={center}\n      mapContainerStyle={mapContainerStyle}\n      onClick={handleMapClick}\n    >\n      {markerPosition && <Marker position={markerPosition} />}\n    </GoogleMap>\n  );\n};\n\nexport default Map;\n","import axios from 'axios';\n\nconst sendOrder = async orderData => {\n  try {\n    await axios.post('https://burgerbackend.herokuapp.com/orders', orderData);\n  } catch (error) {}\n};\n\nexport default sendOrder;\n","import styled from 'styled-components';\n\nconst Section = styled.section`\n  display: flex;\n  padding-top: 60px;\n`;\n\nexport { Section };\n","import styled, { keyframes } from 'styled-components';\n\nconst appear = keyframes`\n  from {\n    opacity: 0;\n    transform: translateX(-25px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n`;\n\nconst StyledForm = styled.form`\n  width: 300px;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 24px;\n  margin-top: 10px;\n`;\n\nconst StyledLabel = styled.label`\n  display: block;\n  margin-right: auto;\n`;\n\nconst StyledField = styled.input`\n  display: flex;\n  width: 230px;\n  padding: 10px;\n  border-radius: 10px;\n  border: 1px solid #ccc;\n\n  &:focus {\n    outline: none;\n    border-color: #00aeef;\n  }\n`;\n\nconst Error = styled.div`\n  position: absolute;\n  color: red;\n  animation: ${appear} 500ms ease-in-out;\n`;\n\nconst StyledButton = styled.button`\n  background-color: #00aeef;\n  color: white;\n  padding: 8px 12px;\n  border-radius: 10px;\n  font-size: 16px;\n  border: none;\n  &:hover {\n    background-color: #0077b5;\n  }\n`;\n\nexport { StyledLabel, StyledField, Error, StyledButton, StyledForm };\n","import React from 'react';\nimport 'react-toastify/dist/ReactToastify.css';\nimport ReCAPTCHA from 'react-google-recaptcha';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\nimport { useForm } from 'react-hook-form';\nimport { useSelector } from 'react-redux';\nimport { getCart } from 'components/Redux/Cart/cart';\nimport {\n  StyledLabel,\n  StyledField,\n  Error,\n  StyledButton,\n  StyledForm,\n} from './OrderForm.styled';\n\nconst schema = Yup.object().shape({\n  name: Yup.string().required('Name is required!'),\n  email: Yup.string().required('Email is required!'),\n  phone: Yup.string()\n    .required('Number is required!')\n    .min(7, 'Number must be at least 7 digits')\n    .max(16, 'Number must not exceed 16 digits'),\n  address: Yup.string().required('Address is required!'),\n});\n\nconst OrderForm = ({ formSubmit, initialAddress, children }) => {\n  const cartList = useSelector(getCart);\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n\n  const onSubmit = (data, e) => {\n    formSubmit({\n      name: data.name,\n      number: data.phone,\n      email: data.email,\n      address: data.address,\n      order: cartList,\n    });\n\n    reset();\n  };\n\n  return (\n    <>\n      <StyledForm onSubmit={handleSubmit(onSubmit)}>\n        <div>\n          <StyledLabel htmlFor=\"name\">\n            Name:\n            <StyledField type=\"text\" {...register('name')} />\n            {errors.name && <Error>{errors.name?.message}</Error>}\n          </StyledLabel>\n        </div>\n        <div>\n          <StyledLabel htmlFor=\"email\">\n            Email:\n            <StyledField type=\"email\" {...register('email')} />\n            {errors.email && <Error>{errors.email?.message}</Error>}\n          </StyledLabel>\n        </div>\n        <div>\n          <StyledLabel htmlFor=\"phone\">\n            Phone:\n            <StyledField type=\"tel\" {...register('phone')} />\n            {errors.phone && <Error>{errors.phone?.message}</Error>}\n          </StyledLabel>\n        </div>\n        <div>\n          <StyledLabel htmlFor=\"address\">\n            Address:\n            <StyledField\n              type=\"text\"\n              defaultValue={initialAddress}\n              {...register('address')}\n            />\n            {errors.address && <Error>{errors.address?.message}</Error>}\n          </StyledLabel>\n        </div>\n        <ReCAPTCHA sitekey=\"6LeSejwmAAAAAIeKJImdnYf4_0oG-ct8gDYfwySV\" />\n        <StyledButton type=\"submit\">Submit</StyledButton>\n        {children}\n      </StyledForm>\n    </>\n  );\n};\n\nexport default OrderForm;\n","import defaultImage from '../NotFound/default-image.webp';\n\nconst CartList = ({ array, onChange, onClick }) => {\n  return (\n    <>\n      {array.map(item => {\n        return (\n          <li key={item._id}>\n            <img src={defaultImage} width=\"300\" alt=\"\" />\n            <h3>{item.name}</h3>\n            <p>Price: {item.price * item.quantity}</p>\n            <input\n              type=\"number\"\n              defaultValue=\"1\"\n              onChange={e => onChange(e, item._id)}\n            />\n            <button type=\"button\" onClick={() => onClick(item._id)}>\n              Remove\n            </button>\n          </li>\n        );\n      })}\n    </>\n  );\n};\n\nexport default CartList;\n","import styled from 'styled-components';\n\nconst Thumb = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding-left: 50px;\n`;\n\nconst Burgerlist = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  padding: 15px;\n  list-style: none;\n`;\n\nexport { Thumb, Burgerlist };\n","import CartList from 'components/CartList/CartList';\nimport { Thumb, Burgerlist } from './Cart.styled';\n\nconst Cart = ({ array, onChange, onClick }) => {\n  return (\n    <Thumb>\n      <Burgerlist>\n        <CartList array={array} onChange={onChange} onClick={onClick} />\n      </Burgerlist>\n    </Thumb>\n  );\n};\n\nexport default Cart;\n","import { useSelector } from 'react-redux';\nimport { getCart } from 'components/Redux/Cart/cart';\n\nconst TotalPrice = () => {\n  const cartList = useSelector(getCart);\n\n  const getTotalPrice = () => {\n    return cartList.reduce((acc, el) => {\n      return (acc += el.quantity * el.price);\n    }, 0);\n  };\n\n  return <div>Total price: {getTotalPrice()}</div>;\n};\n\nexport default TotalPrice;\n","import { useState } from 'react';\nimport { useLoadScript } from '@react-google-maps/api';\nimport { ToastContainer, toast } from 'react-toastify';\nimport Map from 'components/Map/Map';\nimport Geocode from 'react-geocode';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  getCart,\n  changeQuantity,\n  removeItem,\n} from 'components/Redux/Cart/cart';\nimport sendOrder from 'services/sendOrder';\nimport { Section } from './Shopping.card.styled';\nimport OrderForm from 'components/OrderForm/OrderForm';\nimport Cart from 'components/Cart/Cart';\nimport TotalPrice from 'components/TotalPrice/TotalPrice';\nimport Loader from 'components/Loader/Loader';\n\nconst ShoppingCart = () => {\n  const [address, setAddress] = useState('');\n\n  const cartList = useSelector(getCart);\n  const dispatch = useDispatch();\n\n  const { isLoaded } = useLoadScript({\n    googleMapsApiKey: 'AIzaSyAZv5czqJS_HE97JG_DlvnmPj5BdMU_8S8',\n  });\n\n  const formSubmit = async data => {\n    try {\n      if (data.order.length === 0) {\n        toast.error(\n          `To submit an order, you must add the item to your shopping cart.`\n        );\n        return;\n      }\n\n      await sendOrder(data);\n\n      toast.success(`Thank you, your order has been processed.`);\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  const changeItemQuantity = (e, id) => {\n    if (Number(e.target.value) === 0) {\n      return (e.target.value = '1');\n    }\n\n    dispatch(changeQuantity({ id, value: e.target.value }));\n  };\n\n  const removeBtnHandler = id => {\n    dispatch(removeItem(id));\n    toast.info('Item removed from cart');\n  };\n\n  const handleMarkerAdd = event => {\n    Geocode.setApiKey('AIzaSyAZv5czqJS_HE97JG_DlvnmPj5BdMU_8S8');\n\n    const { lat, lng } = event.latLng;\n    Geocode.fromLatLng(lat(), lng())\n      .then(response => {\n        const address = response.results[0].formatted_address;\n        setAddress(address);\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  return (\n    <Section>\n      <div>\n        {!isLoaded ? (\n          <Loader />\n        ) : (\n          <Map onClick={handleMarkerAdd} address={address} />\n        )}\n        <OrderForm formSubmit={formSubmit} initialAddress={address}>\n          <TotalPrice />\n        </OrderForm>\n      </div>\n      <Cart\n        array={cartList}\n        onChange={changeItemQuantity}\n        onClick={removeBtnHandler}\n        address={address}\n      />\n      <ToastContainer autoClose={2000} />\n    </Section>\n  );\n};\n\nexport default ShoppingCart;\n"],"names":["onClick","useState","markerPosition","setMarkerPosition","zoom","center","lat","lng","mapContainerStyle","width","height","marginTop","marginRight","event","latLng","latitude","longitude","position","sendOrder","orderData","axios","Section","styled","appear","keyframes","StyledForm","StyledLabel","StyledField","Error","StyledButton","schema","Yup","shape","name","required","email","phone","min","max","address","formSubmit","initialAddress","children","cartList","useSelector","getCart","useForm","resolver","yupResolver","register","handleSubmit","reset","errors","formState","onSubmit","data","e","number","order","htmlFor","type","message","defaultValue","sitekey","array","onChange","map","item","src","defaultImage","alt","price","quantity","_id","Thumb","Burgerlist","reduce","acc","el","setAddress","dispatch","useDispatch","isLoaded","useLoadScript","googleMapsApiKey","length","toast","console","log","Geocode","then","response","results","formatted_address","catch","error","Loader","id","Number","target","value","changeQuantity","removeItem","autoClose"],"sourceRoot":""}