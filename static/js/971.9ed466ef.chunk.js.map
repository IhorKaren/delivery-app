{"version":3,"file":"static/js/971.9ed466ef.chunk.js","mappings":"oKAEMA,E,QAAUC,GAAAA,QAAH,+D,uKCAPC,EAAS,mCAAG,WAAMC,GAAN,0FAERC,EAAAA,EAAAA,KAAW,6CAA8CD,GAFjD,8GAAH,sDAMf,I,qECNME,GAASC,EAAAA,EAAAA,IAAH,wJAWNC,EAAaN,EAAAA,GAAAA,KAAH,yKAUVO,EAAcP,EAAAA,GAAAA,MAAH,kEAKXQ,EAAcR,EAAAA,GAAAA,MAAH,oMAaXS,EAAQT,EAAAA,GAAAA,IAAH,kGAGII,GAGTM,EAAeV,EAAAA,GAAAA,OAAH,4M,SC/BZW,EAASC,EAAAA,KAAaC,MAAM,CAChCC,KAAMF,EAAAA,KAAaG,SAAS,qBAC5BC,MAAOJ,EAAAA,KAAaG,SAAS,sBAC7BE,MAAOL,EAAAA,KACJG,SAAS,uBACTG,IAAI,EAAG,oCACPC,IAAI,GAAI,oCACXC,QAASR,EAAAA,KAAaG,SAAS,0BA0EjC,EAvEkB,SAAC,GAA8B,IAAD,QAA3BM,EAA2B,EAA3BA,WAAYC,EAAe,EAAfA,SACzBC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IAE7B,GAKIC,EAAAA,EAAAA,IAAQ,CACVC,UAAUC,EAAAA,EAAAA,GAAYjB,KALtBkB,EADF,EACEA,SACAC,EAFF,EAEEA,aACAC,EAHF,EAGEA,MACaC,EAJf,EAIEC,UAAaD,OAwBf,OACE,iCACE,UAAC1B,EAAD,CAAY4B,SAAUJ,GArBT,SAACK,EAAMC,GACE,IAApBb,EAASc,QAObhB,EAAW,CACTP,KAAMqB,EAAKrB,KACXwB,OAAQH,EAAKlB,MACbD,MAAOmB,EAAKnB,MACZI,QAASe,EAAKf,QACdmB,MAAOhB,IAETQ,IACAS,EAAAA,GAAAA,QAAA,8CAdEA,EAAAA,GAAAA,MAAA,mEAeH,IAIG,WACE,0BACE,UAACjC,EAAD,CAAakC,QAAQ,OAArB,mBAEE,SAACjC,GAAD,QAAakC,KAAK,QAAWb,EAAS,UACrCG,EAAOlB,OAAQ,SAACL,EAAD,oBAAQuB,EAAOlB,YAAf,aAAQ,EAAa6B,gBAGzC,0BACE,UAACpC,EAAD,CAAakC,QAAQ,QAArB,oBAEE,SAACjC,GAAD,QAAakC,KAAK,SAAYb,EAAS,WACtCG,EAAOhB,QAAS,SAACP,EAAD,oBAAQuB,EAAOhB,aAAf,aAAQ,EAAc2B,gBAG3C,0BACE,UAACpC,EAAD,CAAakC,QAAQ,QAArB,oBAEE,SAACjC,GAAD,QAAakC,KAAK,OAAUb,EAAS,WACpCG,EAAOf,QAAS,SAACR,EAAD,oBAAQuB,EAAOf,aAAf,aAAQ,EAAc0B,gBAG3C,0BACE,UAACpC,EAAD,CAAakC,QAAQ,UAArB,sBAEE,SAACjC,GAAD,QAAakC,KAAK,QAAWb,EAAS,aACrCG,EAAOZ,UAAW,SAACX,EAAD,oBAAQuB,EAAOZ,eAAf,aAAQ,EAAgBuB,gBAI/C,SAACjC,EAAD,CAAcgC,KAAK,SAAnB,oBACCpB,MAEH,SAAC,KAAD,CAAgBsB,UAAW,QAGhC,E,SCrED,EAxBiB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QACnC,OACE,8BACGF,EAAMG,KAAI,SAAAC,GACT,OACE,2BACE,gBAAKC,IAAKC,EAAcC,MAAM,MAAMC,IAAI,MACxC,wBAAKJ,EAAKnC,QACV,mCAAWmC,EAAKK,MAAQL,EAAKM,aAC7B,kBACEb,KAAK,SACLc,aAAa,IACbV,SAAU,SAAAV,GAAC,OAAIU,EAASV,EAAGa,EAAKQ,IAArB,KAEb,mBAAQf,KAAK,SAASK,QAAS,kBAAMA,EAAQE,EAAKQ,IAAnB,EAA/B,sBATOR,EAAKQ,IAcjB,KAGN,ECtBKC,EAAQ1D,EAAAA,GAAAA,IAAH,oHAOL2D,EAAa3D,EAAAA,GAAAA,GAAH,mHCIhB,EAVa,SAAC,GAAkC,IAAhC6C,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QAC/B,OACE,SAACW,EAAD,WACE,SAACC,EAAD,WACE,SAAC,EAAD,CAAUd,MAAOA,EAAOC,SAAUA,EAAUC,QAASA,OAI5D,ECID,EAZmB,WACjB,IAAMxB,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IAQ7B,OAAO,2CALEF,EAASqC,QAAO,SAACC,EAAKC,GAC3B,OAAQD,EAAOC,EAAGP,SAAWO,EAAGR,KACjC,GAAE,KAIN,E,UC0CD,EAzCqB,WACnB,IAAM/B,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IAEvBsC,GAAWC,EAAAA,EAAAA,MAEX3C,EAAU,mCAAG,WAAMc,GAAN,0FAETlC,EAAUkC,GAFD,sDAIf8B,QAAQC,IAAI,KAAMvB,SAJH,wDAAH,sDAqBhB,OACE,UAAC,IAAD,YACE,SAAC,EAAD,CAAWtB,WAAYA,EAAvB,UACE,SAAC,EAAD,OAEF,SAAC,EAAD,CACEwB,MAAOtB,EACPuB,SApBqB,SAACV,EAAG+B,GAC7B,GAA+B,IAA3BC,OAAOhC,EAAEiC,OAAOC,OAClB,OAAQlC,EAAEiC,OAAOC,MAAQ,IAG3BP,GAASQ,EAAAA,EAAAA,GAAe,CAAEJ,GAAAA,EAAIG,MAAOlC,EAAEiC,OAAOC,QAC/C,EAeKvB,QAbmB,SAAAoB,GACvBJ,GAASS,EAAAA,EAAAA,IAAWL,IACpB3B,EAAAA,GAAAA,KAAW,yBACZ,KAYG,SAAC,KAAD,CAAgBI,UAAW,SAGhC,C","sources":["Pages/Pages.styled.jsx","services/sendOrder.js","components/OrderForm/OrderForm.styled.jsx","components/OrderForm/OrderForm.jsx","components/CartList/CartList.jsx","components/Cart/Cart.styled.jsx","components/Cart/Cart.jsx","components/TotalPrice/TotalPrice.jsx","Pages/ShoppingCart.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nconst Section = styled.section`\n  display: flex;\n  padding-top: 60px;\n`;\n\nexport { Section };\n","import axios from 'axios';\n\nconst sendOrder = async orderData => {\n  try {\n    await axios.post('https://burgerbackend.herokuapp.com/orders', orderData);\n  } catch (error) {}\n};\n\nexport default sendOrder;\n","import styled, { keyframes } from 'styled-components';\n\nconst appear = keyframes`\n  from {\n    opacity: 0;\n    transform: translateX(-25px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n`;\n\nconst StyledForm = styled.form`\n  padding-top: 50px;\n  width: 300px;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 24px;\n  margin: 0 auto;\n`;\n\nconst StyledLabel = styled.label`\n  display: block;\n  margin-right: auto;\n`;\n\nconst StyledField = styled.input`\n  display: block;\n  width: 100%;\n  padding: 10px;\n  border-radius: 10px;\n  border: 1px solid #ccc;\n\n  &:focus {\n    outline: none;\n    border-color: #00aeef;\n  }\n`;\n\nconst Error = styled.div`\n  position: absolute;\n  color: red;\n  animation: ${appear} 500ms ease-in-out;\n`;\n\nconst StyledButton = styled.button`\n  background-color: #00aeef;\n  color: white;\n  padding: 8px 12px;\n  border-radius: 10px;\n  font-size: 16px;\n  border: none;\n  &:hover {\n    background-color: #0077b5;\n  }\n`;\n\nexport { StyledLabel, StyledField, Error, StyledButton, StyledForm };\n","import React from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\nimport { useForm } from 'react-hook-form';\nimport { useSelector } from 'react-redux';\nimport { getCart } from 'components/Redux/Cart/cart';\nimport {\n  StyledLabel,\n  StyledField,\n  Error,\n  StyledButton,\n  StyledForm,\n} from './OrderForm.styled';\n\nconst schema = Yup.object().shape({\n  name: Yup.string().required('Name is required!'),\n  email: Yup.string().required('Email is required!'),\n  phone: Yup.string()\n    .required('Number is required!')\n    .min(7, 'Number must be at least 7 digits')\n    .max(16, 'Number must not exceed 16 digits'),\n  address: Yup.string().required('Address is required!'),\n});\n\nconst OrderForm = ({ formSubmit, children }) => {\n  const cartList = useSelector(getCart);\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n\n  const onSubmit = (data, e) => {\n    if (cartList.length === 0) {\n      toast.error(\n        `To submit an order, you must add the item to your shopping cart.`\n      );\n      return;\n    }\n\n    formSubmit({\n      name: data.name,\n      number: data.phone,\n      email: data.email,\n      address: data.address,\n      order: cartList,\n    });\n    reset();\n    toast.success(`Thank you, your order has been processed.`);\n  };\n\n  return (\n    <>\n      <StyledForm onSubmit={handleSubmit(onSubmit)}>\n        <div>\n          <StyledLabel htmlFor=\"name\">\n            Name:\n            <StyledField type=\"text\" {...register('name')} />\n            {errors.name && <Error>{errors.name?.message}</Error>}\n          </StyledLabel>\n        </div>\n        <div>\n          <StyledLabel htmlFor=\"email\">\n            Email:\n            <StyledField type=\"email\" {...register('email')} />\n            {errors.email && <Error>{errors.email?.message}</Error>}\n          </StyledLabel>\n        </div>\n        <div>\n          <StyledLabel htmlFor=\"phone\">\n            Phone:\n            <StyledField type=\"tel\" {...register('phone')} />\n            {errors.phone && <Error>{errors.phone?.message}</Error>}\n          </StyledLabel>\n        </div>\n        <div>\n          <StyledLabel htmlFor=\"address\">\n            Address:\n            <StyledField type=\"text\" {...register('address')} />\n            {errors.address && <Error>{errors.address?.message}</Error>}\n          </StyledLabel>\n        </div>\n\n        <StyledButton type=\"submit\">Submit</StyledButton>\n        {children}\n      </StyledForm>\n      <ToastContainer autoClose={3000} />\n    </>\n  );\n};\n\nexport default OrderForm;\n","import defaultImage from '../NotFound/default-image.webp';\n\nconst CartList = ({ array, onChange, onClick }) => {\n  return (\n    <>\n      {array.map(item => {\n        return (\n          <li key={item._id}>\n            <img src={defaultImage} width=\"300\" alt=\"\" />\n            <h3>{item.name}</h3>\n            <p>Price: {item.price * item.quantity}</p>\n            <input\n              type=\"number\"\n              defaultValue=\"1\"\n              onChange={e => onChange(e, item._id)}\n            />\n            <button type=\"button\" onClick={() => onClick(item._id)}>\n              Remove\n            </button>\n          </li>\n        );\n      })}\n    </>\n  );\n};\n\nexport default CartList;\n","import styled from 'styled-components';\n\nconst Thumb = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding-left: 50px;\n`;\n\nconst Burgerlist = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  padding: 15px;\n  list-style: none;\n`;\n\nexport { Thumb, Burgerlist };\n","import CartList from 'components/CartList/CartList';\nimport { Thumb, Burgerlist } from './Cart.styled';\n\nconst Cart = ({ array, onChange, onClick }) => {\n  return (\n    <Thumb>\n      <Burgerlist>\n        <CartList array={array} onChange={onChange} onClick={onClick} />\n      </Burgerlist>\n    </Thumb>\n  );\n};\n\nexport default Cart;\n","import { useSelector } from 'react-redux';\nimport { getCart } from 'components/Redux/Cart/cart';\n\nconst TotalPrice = () => {\n  const cartList = useSelector(getCart);\n\n  const getTotalPrice = () => {\n    return cartList.reduce((acc, el) => {\n      return (acc += el.quantity * el.price);\n    }, 0);\n  };\n\n  return <div>Total price: {getTotalPrice()}</div>;\n};\n\nexport default TotalPrice;\n","import React from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  getCart,\n  changeQuantity,\n  removeItem,\n} from 'components/Redux/Cart/cart';\nimport sendOrder from 'services/sendOrder';\nimport OrderForm from 'components/OrderForm/OrderForm';\nimport Cart from 'components/Cart/Cart';\nimport TotalPrice from 'components/TotalPrice/TotalPrice';\nimport { Section } from './Pages.styled';\n\nconst ShoppingCart = () => {\n  const cartList = useSelector(getCart);\n\n  const dispatch = useDispatch();\n\n  const formSubmit = async data => {\n    try {\n      await sendOrder(data);\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  const changeItemQuantity = (e, id) => {\n    if (Number(e.target.value) === 0) {\n      return (e.target.value = '1');\n    }\n\n    dispatch(changeQuantity({ id, value: e.target.value }));\n  };\n\n  const removeBtnHandler = id => {\n    dispatch(removeItem(id));\n    toast.info('Item removed from cart');\n  };\n\n  return (\n    <Section>\n      <OrderForm formSubmit={formSubmit}>\n        <TotalPrice />\n      </OrderForm>\n      <Cart\n        array={cartList}\n        onChange={changeItemQuantity}\n        onClick={removeBtnHandler}\n      />\n      <ToastContainer autoClose={1500} />\n    </Section>\n  );\n};\n\nexport default ShoppingCart;\n"],"names":["Section","styled","sendOrder","orderData","axios","appear","keyframes","StyledForm","StyledLabel","StyledField","Error","StyledButton","schema","Yup","shape","name","required","email","phone","min","max","address","formSubmit","children","cartList","useSelector","getCart","useForm","resolver","yupResolver","register","handleSubmit","reset","errors","formState","onSubmit","data","e","length","number","order","toast","htmlFor","type","message","autoClose","array","onChange","onClick","map","item","src","defaultImage","width","alt","price","quantity","defaultValue","_id","Thumb","Burgerlist","reduce","acc","el","dispatch","useDispatch","console","log","id","Number","target","value","changeQuantity","removeItem"],"sourceRoot":""}